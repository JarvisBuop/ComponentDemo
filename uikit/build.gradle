apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion  rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:${rootProject.junitVersion}"
    androidTestImplementation ("com.android.support.test:runner:${rootProject.runnerVersion}"){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ("com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}"){
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    //    //todo app系统库的依赖;
    api "com.android.support.constraint:constraint-layout:${rootProject.constraintVersion}"
    api "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    api "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:transition:$rootProject.supportLibraryVersion"
    api "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    //    //todo 基本功能库的依赖
    //RxJava;
    //RxAndroid;
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    //gson解析
    api "com.google.code.gson:gson:${rootProject.gsonVersion}"
    //dagger
//    compile 'com.google.dagger:dagger:2.14.1'
//    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    //下载框架retrofit;
    api "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    api "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"//对序列化和反序列化的转化;
    api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofitVersion}"//对Call对象的转化为Observe对象
    api "com.squareup.okhttp3:logging-interceptor:${rootProject.okhttp_logging_interceptor}"

    //todo 常用工具库的依赖
    //butterknife
    api "com.jakewharton:butterknife:${rootProject.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.butterKnifeVersion}"

    api "com.jakewharton:disklrucache:${rootProject.cacheVersion}"

    api("com.github.bumptech.glide:glide:${rootProject.glideVersion}") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.glideVersion}"
    api "com.blankj:utilcode:$rootProject.blackVersion"
    api "de.hdodenhof:circleimageview:$rootProject.circleimgVersion"

    //todo EventBus 事件总线;
    api "org.greenrobot:eventbus:${rootProject.eventBusVersion}"
    api "com.jakewharton.timber:timber:$rootProject.timberVersion"
    api "com.google.guava:guava:$rootProject.guava"

//    api "com.alibaba:arouter-compiler:$rootProject.arouter_compiler"
    api "com.alibaba:arouter-api:$rootProject.arouter_api"
}
