if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'

def static getGitVersion() {
    def cmd = 'git rev-list HEAD --count'
    try {
        return cmd.execute().text.trim().toInteger()
    } catch (Throwable th) {
        return "";
    }
}

def static getBuildTime() {
    try {
        return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"));
    } catch (Throwable th) {
        return new Date().toLocaleString();
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    defaultConfig {
//        applicationId "com.ostak.justplaystudent"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getGitVersion()
        versionName rootProject.ext.versionName

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    signingConfigs {
        myConfig {
//            storeFile file(properties.getProperty('justplay.signing.file'))
//            storePassword properties.getProperty('justplay.signing.password')
//            keyAlias properties.getProperty('justplay.signing.alias')
//            keyPassword properties.getProperty('justplay.signing.key.password')
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            debuggable true
        }
        release {
            minifyEnabled false //开启混淆
            shrinkResources false //压缩资源
            zipAlignEnabled false //是否优化apk文件，将apk文件中未压缩的数据在4个字节边界上对齐
//            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        //todo 3.0之后;each , outputFile -> all,outputFileName
//        android.applicationVariants.all { variant ->    //批量修改Apk名字
//            variant.outputs.all { output ->
//                def outputFile = output.outputFile
//                def outDirectory = outputFile.parent
//
//                if ("true".equals(IS_JENKINS)) {
//                    //配合jenkins的打包路径;
//                    outDirectory = properties.getProperty("app.output.dir")
//                }
//                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    def fileName = "justPlay-student"
//                    fileName += getBuildTime() + "-"
//                    if (!(variant.flavorName != null && variant.flavorName.equals(""))) {
//                        fileName += variant.flavorName
//                    }
//                    if (!"release".equals(variant.buildType.name)) {
//                        fileName += variant.buildType.name + "-"
//                    }
//                    if (!(variant.versionName != null && variant.versionName.equals(""))) {
//                        fileName += variant.versionName
//                    }
//                    fileName += ".apk"
//                    outputFileName = fileName;
//                }
//            }
//        }
    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发需要移除debug文件中的所有java文件;
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:${rootProject.junitVersion}"
    androidTestImplementation("com.android.support.test:runner:${rootProject.runnerVersion}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }


    implementation project(path: ':uikit')
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouter_compiler"
//    组件化中的自动生成编译器,必须放在组件中;
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.butterKnifeVersion}"
}
